// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" // Specify PostgreSQL
  url      = env("DIRECT_URL") // Loads the DATABASE_URL from .env
}

model User {
  id                             String    @id @default(cuid())
  email                          String    @unique
  password_hash                  String
  preferred_app_language         String?
  preferred_narrative_language   String?
  preferred_model_name           String?
  created_at                     DateTime  @default(now())
  updated_at                     DateTime  @updatedAt
  email_confirmed                Boolean   @default(false)
  email_confirmation_token       String?   @unique
  email_confirmation_expires_at  DateTime?
  password_reset_token           String?   @unique
  password_reset_expires_at      DateTime?
  gameStates                     GameState[]
  themeInteractions              UserThemeInteraction[]
}

model GameState {
  id                             String    @id @default(cuid())
  user                           User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId                         String    @map("user_id")

  theme_id                       String
  player_identifier              String

  game_history                   Json
  game_history_summary           String?   @db.Text

  last_dashboard_updates         Json
  last_game_state_indicators     Json
  current_prompt_type            String
  current_narrative_language     String
  last_suggested_actions         Json
  panel_states                   Json

  model_name_used                String?
  theme_version_id               String?

  created_at                     DateTime  @default(now())
  updated_at                     DateTime  @updatedAt

  @@unique([userId, theme_id])
  @@index([userId])
  @@index([theme_id])
}

model UserThemeInteraction {
  id                             String    @id @default(cuid())
  user                           User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId                         String    @map("user_id")

  theme_id                       String

  is_playing                     Boolean   @default(false)
  is_liked                       Boolean   @default(false)

  last_played_at                 DateTime?

  created_at                     DateTime  @default(now())
  updated_at                     DateTime  @updatedAt

  @@unique([userId, theme_id])
  @@index([userId])
  @@index([theme_id])
}
